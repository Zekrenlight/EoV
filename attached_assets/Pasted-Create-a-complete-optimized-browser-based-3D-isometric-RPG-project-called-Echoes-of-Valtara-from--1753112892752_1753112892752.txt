Create a complete, optimized browser-based 3D isometric RPG project called "Echoes of Valtara" from scratch in Replit, as a full spiritual successor to Old School RuneScape (OSRS). Use Three.js (via CDN for memory efficiency) for 3D rendering with isometric camera (arrow keys for panning/zooming like OSRS), React/Vite/TS for structure, and Node.js/Socket.io for LAN co-op. Optimize heavily for Replit limits (minify JS/TS, lazy-load assets/models, efficient procedural generation, no unnecessary dependencies—keep under 80% memory). The game plays better than OSRS with refined grind (mini-milestones, synergies without tedium), intuitive controls (WASD movement, click-to-path with A* on terrain), seamless onboarding, session reminders, mod support, and no pay-to-win—everything earned. Capture OSRS's scaling progression where skills/world unlock together meaningfully, with 25+ skills tied to Valtara pantheon attunements (e.g., Ailura for vitality in gathering, Thalirion for knowledge puzzles), branching quests with humorous moral choices, dynamic biomes (forest, desert, mountain, water, plains) shifting seasonally with lighting/shadows, player-driven economy fluctuating via godly events, raids/bosses scaling to party, and persistent worlds imprinting player actions.

Focus on LAN co-op for 1-8 players: Host local servers (generate IP/code for friends to join; friends need same version, start fresh characters but contribute via trading/building/events, imprinting on host's economy/world). No global online; pure local/LAN for controlled play—solo challenges build resilience (e.g., Thalirion riddles), parties ease them (shared attunements, co-op like Amara bonds). Use free CC0 assets (3D models/sprites from OpenGameArt/Sketchfab as GLTF, sounds from FreeSound, music loops via placeholder riffusion-style generation). Visuals superior to OSRS: Enhanced 3D pixel-style models, smooth animations, dynamic effects. Generate all files (TS/JS for logic, CSS for UI, assets folders), include Vite config for build, and ensure it runs in browser (optional Electron for app-like feel). Output the full project ready for run/host, with comments for modding.